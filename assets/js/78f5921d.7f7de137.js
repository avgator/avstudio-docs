"use strict";(globalThis.webpackChunkavstudio_docs=globalThis.webpackChunkavstudio_docs||[]).push([[7491],{24644:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/listfunctionapplied-b6671a0dc39cba4f8ead0fe2c7bb831e.png"},28453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>s});var t=a(96540);const i={},l=t.createContext(i);function o(e){const n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(l.Provider,{value:n},e.children)}},41368:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/variables-fd5d40a55148d24111ac37cbfe4c1112.png"},45959:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/singledata-9415450560c25419efea0b267194b750.png"},59234:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"knowledge-base/multilanguage/multilanguage","title":"Multi-Language Implementation Guide","description":"Before We Start","source":"@site/docs/knowledge-base/multilanguage/multilanguage.md","sourceDirName":"knowledge-base/multilanguage","slug":"/knowledge-base/multilanguage/","permalink":"/avstudio-docs/knowledge-base/multilanguage/","draft":false,"unlisted":false,"editUrl":"https://github.com/avgator/avstudio-docs/edit/main/docs/knowledge-base/multilanguage/multilanguage.md","tags":[{"inline":true,"label":"knowledge-base","permalink":"/avstudio-docs/tags/knowledge-base"},{"inline":true,"label":"multi-language","permalink":"/avstudio-docs/tags/multi-language"},{"inline":true,"label":"localization","permalink":"/avstudio-docs/tags/localization"},{"inline":true,"label":"ui-components","permalink":"/avstudio-docs/tags/ui-components"},{"inline":true,"label":"datasource","permalink":"/avstudio-docs/tags/datasource"},{"inline":true,"label":"language-switching","permalink":"/avstudio-docs/tags/language-switching"},{"inline":true,"label":"avstudio","permalink":"/avstudio-docs/tags/avstudio"},{"inline":true,"label":"javascript","permalink":"/avstudio-docs/tags/javascript"},{"inline":true,"label":"functions","permalink":"/avstudio-docs/tags/functions"},{"inline":true,"label":"internationalization","permalink":"/avstudio-docs/tags/internationalization"},{"inline":true,"label":"language-codes","permalink":"/avstudio-docs/tags/language-codes"},{"inline":true,"label":"dynamic-content","permalink":"/avstudio-docs/tags/dynamic-content"}],"version":"current","lastUpdatedBy":"Vadim Chekirka","lastUpdatedAt":1741059630000,"sidebarPosition":2,"frontMatter":{"title":"Multi-Language Implementation Guide","sidebar_label":"Multi-Language Implementation Guide","tags":["knowledge-base","multi-language","localization","ui-components","datasource","language-switching","avstudio","javascript","functions","internationalization","language-codes","dynamic-content"],"sidebar_position":2},"sidebar":"knowledgeBaseSidebar","previous":{"title":"How to create button with a gradient","permalink":"/avstudio-docs/knowledge-base/how-to/button-with-a-gradient-or-an-image/"},"next":{"title":"Autonomic Mirage Media Server Integration Guide","permalink":"/avstudio-docs/knowledge-base/autonomic/"}}');var i=a(74848),l=a(28453);const o={title:"Multi-Language Implementation Guide",sidebar_label:"Multi-Language Implementation Guide",tags:["knowledge-base","multi-language","localization","ui-components","datasource","language-switching","avstudio","javascript","functions","internationalization","language-codes","dynamic-content"],sidebar_position:2},s="Multi-Language Implementation Guide",r={},c=[{value:"Before We Start",id:"before-we-start",level:2},{value:"Locale Setup",id:"locale-setup",level:2},{value:"Defining Language-Dependent Components",id:"defining-language-dependent-components",level:2},{value:"Structuring Your Datasource",id:"structuring-your-datasource",level:2},{value:"Single Element Case",id:"single-element-case",level:2},{value:"Selecting a Single Portion of Data",id:"selecting-a-single-portion-of-data",level:3},{value:"Creating a Function to Select the Language Value",id:"creating-a-function-to-select-the-language-value",level:3},{value:"Example Result",id:"example-result",level:3},{value:"Dealing with Subpages List",id:"dealing-with-subpages-list",level:2},{value:"Example Result",id:"example-result-1",level:3},{value:"Updating the Current Locale",id:"updating-the-current-locale",level:2}];function u(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"multi-language-implementation-guide",children:"Multi-Language Implementation Guide"})}),"\n",(0,i.jsx)(n.h2,{id:"before-we-start",children:"Before We Start"}),"\n",(0,i.jsx)(n.p,{children:"This document explains how to set up and manage multiple languages within your UI using a single, globally accessible language variable. It covers the logic behind structuring data sources so that each element can seamlessly adapt to any chosen language."}),"\n",(0,i.jsx)(n.h2,{id:"locale-setup",children:"Locale Setup"}),"\n",(0,i.jsxs)(n.p,{children:["We need a locale variable to store the current language using standard international language codes (e.g., ",(0,i.jsx)(n.strong,{children:"en"})," for English, ",(0,i.jsx)(n.strong,{children:"es"})," for Spanish, or ",(0,i.jsx)(n.strong,{children:"fr"})," for French)."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"variable within AVStudio",src:a(41368).A+"",width:"1380",height:"520"})}),"\n",(0,i.jsx)(n.h2,{id:"defining-language-dependent-components",children:"Defining Language-Dependent Components"}),"\n",(0,i.jsx)(n.p,{children:"To support language switching on the fly, define all language-dependent UI components via a datasource. This ensures that changing the language variable globally will update the entire UI."}),"\n",(0,i.jsx)(n.h2,{id:"structuring-your-datasource",children:"Structuring Your Datasource"}),"\n",(0,i.jsx)(n.p,{children:"Each datasource used for elements should keep language-specific data together with its matching language code. This approach allows you to handle different languages without manually updating every element."}),"\n",(0,i.jsx)(n.p,{children:"Below is an example of such a datasource:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "rooms": [\n        {\n            "id": 1,\n            "localization": [\n                {\n                    "language": "en",\n                    "value": "office"\n                },\n                {\n                    "language": "es",\n                    "value": "oficina"\n                }\n            ],\n            "joinNumber": 23\n        },\n        {\n            "id": 2,\n            "localization": [\n                {\n                    "language": "en",\n                    "value": "bedroom"\n                },\n                {\n                    "language": "es",\n                    "value": "dormitorio"\n                }\n            ],\n            "joinNumber": 24\n        }\n    ]\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"single-element-case",children:"Single Element Case"}),"\n",(0,i.jsx)(n.h3,{id:"selecting-a-single-portion-of-data",children:"Selecting a Single Portion of Data"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"data filtered for a single entity",src:a(45959).A+"",width:"1500",height:"982"})}),"\n",(0,i.jsx)(n.p,{children:"In some scenarios, you only need a single item from the datasource to attach it to the single UI element. For instance, if you filter or directly select a single room object, it might look like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "id": 1,\n    "localization": [\n        {\n            "language": "en",\n            "value": "office"\n        },\n        {\n            "language": "es",\n            "value": "oficina"\n        }\n    ],\n    "joinNumber": 23\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"creating-a-function-to-select-the-language-value",children:"Creating a Function to Select the Language Value"}),"\n",(0,i.jsxs)(n.p,{children:["You can create a function (e.g., ",(0,i.jsx)(n.strong,{children:"languageselector"}),") in the ",(0,i.jsx)(n.em,{children:"Functions"})," section of AVStudio. This function will:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Retrieve the current language (using the previously defined ",(0,i.jsx)(n.code,{children:"currentLocale"})," variable)."]}),"\n",(0,i.jsxs)(n.li,{children:["Find and return the matching language value from the object\u2019s ",(0,i.jsx)(n.code,{children:"localization"})," array."]}),"\n",(0,i.jsxs)(n.li,{children:["Remove the original ",(0,i.jsx)(n.code,{children:"localization"})," field to avoid redundancy."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"function languageselector(json) {\n    /* The function starts by getting the current language setting \n       from the avgatorStudio. */\n    const current_language = window?.avgatorStudio?.getVariableByName({\n        name: 'currentLocale'\n    });\n\n    /* The function assumes the input 'json' is an array and takes \n       the first element, storing it in 'value'. */\n    const value = json[0];\n\n    /* It searches through the 'localization' array in 'value' to \n       find the object matching the current language. Then it \n       extracts the 'value' field from it. */\n    const localization = value?.localization?.find(\n        (item) => item?.language === current_language\n    )?.value;\n\n    /* Delete the 'localization' field from 'value' to avoid\n       duplicating information. */\n    delete value[\"localization\"];\n\n    /* Finally, return a new object with 'data' (remaining fields) \n       and 'localization' (the selected language value). */\n    return {\n        \"data\": value,\n        \"localization\": localization\n    };\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"example-result",children:"Example Result"}),"\n",(0,i.jsx)(n.p,{children:"Applying this function to the single room object above results in:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "data": {\n        "id": 1,\n        "joinNumber": 23\n    },\n    "localization": "office"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"function has been applied to the data",src:a(70748).A+"",width:"1468",height:"1092"})}),"\n",(0,i.jsx)(n.h2,{id:"dealing-with-subpages-list",children:"Dealing with Subpages List"}),"\n",(0,i.jsx)(n.p,{children:"For a list of subpages (e.g., multiple rooms), modify the function to operate on each item in the array:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"function listlanguageselector(json) {\n    // Retrieve the current language setting from the avgatorStudio object.\n    const current_language = window?.avgatorStudio?.getVariableByName({\n        name: 'currentLocale'\n    });\n\n    // Use 'map' to process each item in the JSON array.\n    return json.map(value => {\n        // Find the localization matching the current language.\n        const localization = value?.localization?.find(\n            (item) => item?.language === current_language\n        )?.value;\n\n        // Remove the 'localization' field from the item to avoid duplication.\n        delete value[\"localization\"];\n\n        // Return the remaining data alongside the selected localization value.\n        return {\n            \"data\": value,\n            \"localization\": localization\n        };\n    });\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"example-result-1",children:"Example Result"}),"\n",(0,i.jsx)(n.p,{children:"When you apply the function to the datasource in subpages list's source selection, you will get a transformed array. For example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[\n    {\n        "data": {\n            "id": 1,\n            "joinNumber": 23\n        },\n        "localization": "office"\n    },\n    {\n        "data": {\n            "id": 2,\n            "joinNumber": 24\n        },\n        "localization": "bedroom"\n    }\n]\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"function has been applied to the data",src:a(24644).A+"",width:"1428",height:"1068"})}),"\n",(0,i.jsx)(n.h2,{id:"updating-the-current-locale",children:"Updating the Current Locale"}),"\n",(0,i.jsxs)(n.p,{children:["If you change the ",(0,i.jsx)(n.code,{children:"currentLocale"})," variable (in any way supported by AVStudio), all interfaces and components that rely on this logic will automatically reflect the new language settings."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"action will change the variable",src:a(91947).A+"",width:"1766",height:"1076"})})]})}function d(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},70748:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/functionapplied-151827daac410ab539975361dff1c0c4.png"},91947:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/changevariable-5794ec552be94b663e71bdc7f65d83e7.png"}}]);