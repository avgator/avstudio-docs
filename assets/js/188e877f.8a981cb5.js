"use strict";(globalThis.webpackChunkavstudio_docs=globalThis.webpackChunkavstudio_docs||[]).push([[4937],{9428:(e,a,r)=>{r.d(a,{A:()=>i});const i=r.p+"assets/images/variables-create-window-14318b3fdb38402e7e294f4ff9f97bee.png"},27403:(e,a,r)=>{r.d(a,{A:()=>i});const i=r.p+"assets/images/variables-ui-overview-0347e92f369b5e5f45c04aaff1d3f725.png"},28453:(e,a,r)=>{r.d(a,{R:()=>o,x:()=>n});var i=r(96540);const t={},s=i.createContext(t);function o(e){const a=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function n(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(s.Provider,{value:a},e.children)}},41628:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>l,contentTitle:()=>n,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"avstudio-editor/user-interface/3-8-project-variables/3-8-project-variables","title":"Project Variables Overview","description":"The Project Variables section in AVstudio lets you define and manage custom variables that store dynamic values. These variables can be used to control logic, respond to signals, and trigger actions across your project. With support for default values, signal feedback, and formatter functions, project variables give you flexible control over your application\u2019s behavior.","source":"@site/docs/avstudio-editor/3-user-interface/3-8-project-variables/3-8-project-variables.md","sourceDirName":"avstudio-editor/3-user-interface/3-8-project-variables","slug":"/avstudio-editor/user-interface/3-8-project-variables/","permalink":"/avstudio-docs/avstudio-editor/user-interface/3-8-project-variables/","draft":false,"unlisted":false,"editUrl":"https://github.com/avgator/avstudio-docs/edit/main/docs/avstudio-editor/3-user-interface/3-8-project-variables/3-8-project-variables.md","tags":[{"inline":true,"label":"avstudio","permalink":"/avstudio-docs/tags/avstudio"},{"inline":true,"label":"project-variables","permalink":"/avstudio-docs/tags/project-variables"},{"inline":true,"label":"signals","permalink":"/avstudio-docs/tags/signals"},{"inline":true,"label":"reactivity","permalink":"/avstudio-docs/tags/reactivity"},{"inline":true,"label":"dynamic-data","permalink":"/avstudio-docs/tags/dynamic-data"},{"inline":true,"label":"variables","permalink":"/avstudio-docs/tags/variables"}],"version":"current","lastUpdatedBy":"Vadim Chekirka","lastUpdatedAt":1760478253000,"sidebarPosition":8,"frontMatter":{"title":"Project Variables Overview","sidebar_label":"Project Variables","sidebar_position":8,"order":8,"tags":["avstudio","project-variables","signals","reactivity","dynamic-data","variables"]},"sidebar":"avstudioEditorSidebar","previous":{"title":"Global Containers","permalink":"/avstudio-docs/avstudio-editor/user-interface/3-7-global-containers/"},"next":{"title":"Data Sources","permalink":"/avstudio-docs/avstudio-editor/user-interface/3-9-data-sources/"}}');var t=r(74848),s=r(28453);const o={title:"Project Variables Overview",sidebar_label:"Project Variables",sidebar_position:8,order:8,tags:["avstudio","project-variables","signals","reactivity","dynamic-data","variables"]},n="Project Variables Overview",l={},c=[{value:"Accessing Project Variables",id:"accessing-project-variables",level:2},{value:"Creating a Project Variable",id:"creating-a-project-variable",level:2},{value:"Project Variables Dashboard Overview",id:"project-variables-dashboard-overview",level:2}];function d(e){const a={code:"code",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.header,{children:(0,t.jsx)(a.h1,{id:"project-variables-overview",children:"Project Variables Overview"})}),"\n",(0,t.jsx)(a.p,{children:"The Project Variables section in AVstudio lets you define and manage custom variables that store dynamic values. These variables can be used to control logic, respond to signals, and trigger actions across your project. With support for default values, signal feedback, and formatter functions, project variables give you flexible control over your application\u2019s behavior."}),"\n",(0,t.jsx)(a.h2,{id:"accessing-project-variables",children:"Accessing Project Variables"}),"\n",(0,t.jsx)(a.p,{children:"Project variables are managed in the Variables section, where you can create and control dynamic values used throughout your project."}),"\n",(0,t.jsx)(a.p,{children:(0,t.jsx)(a.img,{alt:"Variables Tab",src:r(27403).A+"",width:"1364",height:"396"})}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"\u2460 Variables Tab"})," \u2013 Located in the top navigation bar, this tab opens the Project Variables section."]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"\u2461 Add Project Variable"})," \u2013 Click this button to create a new variable. It opens the ",(0,t.jsx)(a.strong,{children:"Create Project Variable"})," window, where you can configure the details."]}),"\n",(0,t.jsx)(a.h2,{id:"creating-a-project-variable",children:"Creating a Project Variable"}),"\n",(0,t.jsx)(a.p,{children:"The Create Project Variable window lets you define the structure and behavior of a variable, including type, signal interactions, and formatting logic."}),"\n",(0,t.jsx)(a.p,{children:(0,t.jsx)(a.img,{alt:"Create Variable Dialog",src:r(9428).A+"",width:"767",height:"515"})}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"\u2460 Name"})," \u2013 Assign a unique name to the variable."]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"\u2461 Type"})," \u2013 Choose from three data types: ",(0,t.jsx)(a.code,{children:"Boolean"}),", ",(0,t.jsx)(a.code,{children:"String"})," or ",(0,t.jsx)(a.code,{children:"Number"})]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"\u2462 Default Value"})," \u2013 Set the initial value for the variable. For Booleans, you can toggle between ",(0,t.jsx)(a.code,{children:"True"})," or ",(0,t.jsx)(a.code,{children:"False"}),"."]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"\u2463 Set Value Signal"})," \u2013 Assign signal feedback for dynamically updating the variable via external inputs."]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"\u2464 Format Output Value"})," \u2013 Optional checkbox. When enabled, allows formatting of the variable output."]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"\u2465 Format Value with Function"})," \u2013 Dropdown to select a formatter (e.g., ",(0,t.jsx)(a.code,{children:"Toggle boolean"}),"). Only available if formatting is enabled."]}),"\n",(0,t.jsxs)(a.p,{children:["To complete setup, click ",(0,t.jsx)(a.code,{children:"Create Variable"}),". To cancel the process, select ",(0,t.jsx)(a.code,{children:"Cancel"}),"."]}),"\n",(0,t.jsx)(a.h2,{id:"project-variables-dashboard-overview",children:"Project Variables Dashboard Overview"}),"\n",(0,t.jsx)(a.p,{children:"Once project variables are created, they appear in the Variables dashboard. This section gives you access to all current variables, their configuration, and editing options."}),"\n",(0,t.jsx)(a.p,{children:(0,t.jsx)(a.img,{alt:"Project Variables Dashboard",src:r(78385).A+"",width:"1394",height:"453"})}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"\u2460 Project Variables Header"})," \u2013 Shows how many variables exist in the project. This helps you keep track of your current variable count."]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"\u2461 Filter By Name"})," \u2013 Useful when you have a long list of variables. You can quickly search and locate any variable by typing its name."]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"\u2462 Type"})," \u2013 Indicates the data type assigned to the variable (",(0,t.jsx)(a.code,{children:"boolean"}),", ",(0,t.jsx)(a.code,{children:"string"}),", or ",(0,t.jsx)(a.code,{children:"number"}),")."]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"\u2463 Default Value"})," \u2013 Displays the starting value for the variable. This field is editable \u2014 for example, you can change a ",(0,t.jsx)(a.code,{children:"false"})," value to ",(0,t.jsx)(a.code,{children:"true"})," if needed."]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"\u2464 Signal FB Setter"})," \u2013 Lets you define or edit the signal feedback used to dynamically update the variable."]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"\u2465 Formatter Function"})," \u2013 If you didn\u2019t assign a formatter during creation, you can still attach one here using the dropdown. You can select options like ",(0,t.jsx)(a.code,{children:"Toggle boolean"}),"."]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"\u2466 Side Effect Actions"})," \u2013 This section supports ",(0,t.jsx)(a.strong,{children:"reactivity"}),", which allows you to define actions that should run when the variable\u2019s value changes. Hovering over the info icon provides more context."]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"\u2467 Controls (Three Dots)"})," \u2013 Clicking the three-dot menu opens the option to ",(0,t.jsx)(a.code,{children:"Delete"})," the variable from your project."]})]})}function h(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},78385:(e,a,r)=>{r.d(a,{A:()=>i});const i=r.p+"assets/images/variables-dashboard-overview-b01d51f814dcb32240c69d07286f2c7f.png"}}]);